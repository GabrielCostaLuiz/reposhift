name: Run Unit Test

on: [push, pull_request]

jobs:
  run-unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: reposhift
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout do código
      - uses: actions/checkout@v3

      # Configurar Node.js e PNPM
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Instalar PNPM globalmente
      - name: Install PNPM
        run: npm install -g pnpm

      # Instalar dependências usando PNPM
      - name: Install dependencies
        run: pnpm install

      # Definir variáveis de ambiente
      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/reposhift?schema=public" >> .env
          echo "WEB_URL=http://localhost:3000" >> .env
          echo "POSTGRES_DB=reposhift" >> .env
          echo "NEXT_PUBLIC_API_URL=http://localhost:3000/api" >> .env 

      - name: Run Unit Tests
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/reposhift?schema=public" > .env
          echo "WEB_URL=http://localhost:3000" >> .env
          echo "POSTGRES_DB=reposhift" >> .env
          echo "NEXT_PUBLIC_API_URL=http://localhost:3333" >> .env 
          pnpm run test
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          WEB_URL: ${{ env.WEB_URL }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          NEXT_PUBLIC_API_URL: ${{ env.NEXT_PUBLIC_API_URL }}
